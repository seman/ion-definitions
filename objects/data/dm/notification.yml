
# Enumerates possible notification delivery modes
DeliveryMode: !enum (values=(DIGEST, UNFILTERED, ABRIDGED), default=DIGEST)

# Enumerates possible notification delivery types
NotificationType: !enum (values=(EMAIL, FILTER), default=EMAIL)

# Enumerates possible notification delivery frequency categories.
Frequency: !enum (values=(REAL_TIME, BATCH), default=REAL_TIME)

---

# Abstract base type for a notification delivery configuration.
DeliveryConfig:
  process_definition_id: ""
  processing:
    # User defined header for the message
    message_header: ""
    # Instructions on how to parse the notification to produce an SMS - more than just a string?
    parsing: ""
  delivery:
    # Email address to use. If empty, get user contact-info
    email: ""
    # Delivery mode for email notification as DeliveryMode value
    mode: !DeliveryMode
    # Indicates the notification frequency mode (real_time and batch) as Frequency value
    frequency: !Frequency

---

# Describes a standing request for notifications by type and delivery modality for one user.
NotificationRequest: !Extends_InformationResource
  # Indicates the notification type as NotificationType value
  type: !NotificationType
  # Event filter by origin
  origin: ""
  # Event filter by origin type
  origin_type: ""
  # Event filter by event type
  event_type: ""
  # Event filter by event subtype
  event_subtype: ""
  # The start and end time of this subscription
  temporal_bounds: !TemporalBounds


# Describes a standing request for notifications by type and delivery modality for one user.
NotificationRequest2: !Extends_InformationResource
  # Indicates the notification type as NotificationType value
  type: !NotificationType
  # Event filter by origin
  origin: ""
  # Event filter by origin type
  origin_type: ""
  # Event filter by event type
  event_type: ""
  # Event filter by event subtype
  event_subtype: ""
  # The start and end time of this subscription
  temporal_bounds: !TemporalBounds
  child_resource: False
  child_resource_type: ""
  # email or sms address
  notification_address: ""
  # is this email or sms address
  notification_address_type: ""
  # real-time or batched
  notification_frequency: ""
  user_id: ""
---

# Notification delivery configuration for a detection event
DetectionFilterConfig:
  processing:
    search_string: ""

  delivery: # contains the information to send when an event is detected
    message: ""       # Message to be put in the detection event
